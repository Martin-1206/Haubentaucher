<?xml version="1.0"?>

<robot name="haubentaucher" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="namespace" value="haubentaucher" />
    <!-- Math constants -->
    <xacro:property name="sin45" value="0.7071068" />
    <xacro:property name="cos45" value="0.7071068" />

    <!-- Body Properties -->
    <xacro:property name="rotor_velocity_slowdown_sim" value="10" />
    <xacro:property name="mesh_file" value="haubentaucher_description/meshes/Haubentaucher.STL" /> <!-- changed (change name someday) -->
    <xacro:property name="rotor_1_mesh_file" value="haubentaucher_description/meshes/aerial_propeller_1.dae" />
    <xacro:property name="rotor_2_mesh_file" value="haubentaucher_description/meshes/aerial_propeller_2.dae" />
    <xacro:property name="mesh_scale" value="0.001" />
    <xacro:property name="prop_scale" value="0.0015" />
    <xacro:property name="mass" value="6.737"/>  <!-- [kg] --> <!-- changed values -->
    <xacro:property name="body_width" value="0.51931" /> <!-- [m] --> <!-- updated 15.09.2023 -->
    <xacro:property name="body_height" value="0.47305" /> <!-- [m] --> <!-- updated 15.09.2023 -->
    <xacro:property name="arm_length" value="0.354" /> <!-- [m] --> <!-- changed values -->
    <xacro:property name="rotor_x_offset" value="${arm_length*cos45}" /> <!-- [m] -->
    <xacro:property name="rotor_y_offset" value="${arm_length*sin45}" /> <!-- [m] -->
    <xacro:property name="rotor_offset_top" value="0.035" /> <!-- [m] -->

    <!-- Rotor constants -->
    <xacro:property name="mass_rotor" value="0.005" /> <!-- [kg] -->
    <xacro:property name="radius_rotor" value="0.195" /> <!-- [m] -->
    <xacro:property name="motor_constant" value="8.54858e-06" /> <!-- [kg.m/s^2] -->
    <xacro:property name="moment_constant" value="0.016" /> <!-- [m] -->
    <xacro:property name="time_constant_up" value="0.0125" /> <!-- [s] -->
    <xacro:property name="time_constant_down" value="0.025" /> <!-- [s] -->
    <xacro:property name="max_rot_velocity" value="1838" /> <!-- [rad/s] -->
    <xacro:property name="rotor_drag_coefficient" value="8.06428e-05" />
    <xacro:property name="rolling_moment_coefficient" value="0.000001" /> 

    <!-- Collision bitmask - By default collides with everything -->
    <xacro:arg name="collision_bitmask" default="-1" />
    <xacro:property name="collision_bitmask" value="$(arg collision_bitmask)" />

    <!-- Property Blocks -->
    <xacro:property name="body_inertia">
        <!-- Iris values -->
        <inertia ixx="0.02953" ixy="0.0001" ixz="-0.0142" iyy="0.2303" iyz="0.0038" izz="0.1604" />  <!-- updated 15.09.2023 --> <!--inertia ixx="0.02953" ixy="0.0001" ixz="-0.0142" iyy="0.2303" iyz="0.0038" izz="0.1604" -->
    </xacro:property>

    <!-- inertia of a single rotor, assuming it is a cuboid. Height=3mm, width=15mm -->
    <xacro:property name="rotor_inertia">
        <xacro:box_inertia x="${radius_rotor}" y="0.015" z="0.003" mass="${mass_rotor*rotor_velocity_slowdown_sim}" />
    </xacro:property>

    <xacro:property name="robot_pos_x" value="0.0" /> <!-- [m] -->
    <xacro:property name="robot_pos_y" value="0.0" /> <!-- [m] -->
    <xacro:property name="robot_pos_z" value="0.0" /> <!-- [m] -->
    <xacro:property name="robot_ori_x" value="0.0" /> <!-- [m] 1.5707 -->
    <xacro:property name="robot_ori_y" value="0.0" /> <!-- [m] -->
    <xacro:property name="robot_ori_z" value="0.0" /> <!-- [m] -->
    <xacro:property name="mesh_aerprop_pos_x" value="0.1905" /> <!-- [m] -->
    <xacro:property name="mesh_aerprop_pos_y" value="-0.0205" /> <!-- [m] -->
    <xacro:property name="mesh_aerprop_pos_z" value="0.01" /> <!-- [m] -->
    <xacro:property name="mesh_aerprop_ori_x" value="-1.5707" /> <!-- [m] -->
    <xacro:property name="mesh_aerprop_ori_y" value="0.0" /> <!-- [m] -->
    <xacro:property name="mesh_aerprop_ori_z" value="1.5707" /> <!-- [m] -->
    
    <!-- Included URDF Files -->
    <xacro:include filename="$(find haubentaucher_description)/urdf/multirotor_base.urdf.xacro" />

    <!-- Instantiate multirotor_base_macro once -->
    <xacro:multirotor_base_macro
         robot_namespace="$(arg namespace)"
         mass="${mass}"
         body_width="${body_width}"
         body_height="${body_height}"
         mesh_file="${mesh_file}"
         mesh_scale="${mesh_scale}">
         <origin xyz="${robot_pos_x} ${robot_pos_y} ${robot_pos_z}" rpy="${robot_ori_x} ${robot_ori_y} ${robot_ori_z}"/>
         <xacro:insert_block name="body_inertia" />
    </xacro:multirotor_base_macro>


    <!-- Instantiate rotors -->
    <xacro:vertical_rotor
        robot_namespace="${namespace}"
        suffix="front_right"
        direction="ccw"
        motor_constant="${motor_constant}"
        moment_constant="${moment_constant}"
        parent="${namespace}/base_link"
        mass_rotor="${mass_rotor}"
        radius_rotor="${radius_rotor}"
        time_constant_up="${time_constant_up}"
        time_constant_down="${time_constant_down}"
        max_rot_velocity="${max_rot_velocity}"
        motor_number="0"
        rotor_drag_coefficient="${rotor_drag_coefficient}"
        rolling_moment_coefficient="${rolling_moment_coefficient}"
        color="Blue"
        prop_scale="${prop_scale}">
        <origin xyz="${arm_length} -${arm_length} ${rotor_offset_top}" rpy="0 0 0" />
        <xacro:insert_block name="rotor_inertia" />
    </xacro:vertical_rotor>

    <xacro:vertical_rotor
        robot_namespace="${namespace}"
        suffix="back_left"
        direction="ccw"
        motor_constant="${motor_constant}"
        moment_constant="${moment_constant}"
        parent="${namespace}/base_link"
        mass_rotor="${mass_rotor}"
        radius_rotor="${radius_rotor}"
        time_constant_up="${time_constant_up}"
        time_constant_down="${time_constant_down}"
        max_rot_velocity="${max_rot_velocity}"
        motor_number="1"
        rotor_drag_coefficient="${rotor_drag_coefficient}"
        rolling_moment_coefficient="${rolling_moment_coefficient}"
        color="Blue"
        prop_scale="${prop_scale}">
        <origin xyz="-${arm_length} ${arm_length} ${rotor_offset_top}" rpy="0 0 0" />
        <xacro:insert_block name="rotor_inertia" />
    </xacro:vertical_rotor>

    <xacro:vertical_rotor 
        robot_namespace="${namespace}"
        suffix="front_left"
        direction="cw"
        motor_constant="${motor_constant}"
        moment_constant="${moment_constant}"
        parent="${namespace}/base_link"
        mass_rotor="${mass_rotor}"
        radius_rotor="${radius_rotor}"
        time_constant_up="${time_constant_up}"
        time_constant_down="${time_constant_down}"
        max_rot_velocity="${max_rot_velocity}"
        motor_number="2"
        rotor_drag_coefficient="${rotor_drag_coefficient}"
        rolling_moment_coefficient="${rolling_moment_coefficient}"
        color="Blue"
        prop_scale="${prop_scale}">
        <origin xyz="${arm_length} ${arm_length} ${rotor_offset_top}" rpy="0 0 0" />
        <xacro:insert_block name="rotor_inertia" />
    </xacro:vertical_rotor>

    <xacro:vertical_rotor 
        robot_namespace="${namespace}"
        suffix="back_right"
        direction="cw"
        motor_constant="${motor_constant}"
        moment_constant="${moment_constant}"
        parent="${namespace}/base_link"
        mass_rotor="${mass_rotor}"
        radius_rotor="${radius_rotor}"
        time_constant_up="${time_constant_up}"
        time_constant_down="${time_constant_down}"
        max_rot_velocity="${max_rot_velocity}"
        motor_number="3"
        rotor_drag_coefficient="${rotor_drag_coefficient}"
        rolling_moment_coefficient="${rolling_moment_coefficient}"
        color="Blue"
        prop_scale="${prop_scale}">
        <origin xyz="-${arm_length} -${arm_length} ${rotor_offset_top}" rpy="0 0 0" />
        <xacro:insert_block name="rotor_inertia" />
    </xacro:vertical_rotor>
    

    <gazebo reference="$(arg namespace)/base_link">
        <dampingFactor>0.001</dampingFactor>
        <collision>
            <surface>
                <contact>
                    <collide_bitmask>${collision_bitmask}</collide_bitmask>
                </contact>
            </surface>
        </collision>
    </gazebo>

</robot>
